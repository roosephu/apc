use crate::f64x2;

impl f64x2 {
    // |x| < pi / 4
    #[inline]
    pub(crate) fn sin_remez(self) -> Self {
        const C1: f64x2 = f64x2 { hi: 1.0, lo: -3.710932568160161e-33 };
        const C3: f64x2 = f64x2 { hi: -0.16666666666666666, lo: -9.251858538542761e-18 };
        const C5: f64x2 = f64x2 { hi: 0.008333333333333333, lo: 1.1564823172823584e-19 };
        const C7: f64x2 = f64x2 { hi: -0.0001984126984126984, lo: -1.7209555496532568e-22 };
        const C9: f64x2 = f64x2 { hi: 2.7557319223985893e-6, lo: -1.858394521208069e-22 };
        const C11: f64x2 = f64x2 { hi: -2.505210838544172e-8, lo: 1.4491633801389212e-24 };
        const C13: f64x2 = f64x2 { hi: 1.6059043836821613e-10, lo: 1.1931711466932894e-26 };
        const C15: f64x2 = f64x2 { hi: -7.647163731819808e-13, lo: 3.3092927077545036e-29 };
        const C17: f64x2 = f64x2 { hi: 2.811457254344742e-15, lo: 1.7646045165973752e-31 };
        const C19: f64x2 = f64x2 { hi: -8.22063524611474e-18, lo: -2.1399979358343384e-34 };
        const C21: f64x2 = f64x2 { hi: 1.957294082718338e-20, lo: -1.4638265350100345e-36 };
        const C23: f64x2 = f64x2 { hi: -3.868162594633509e-23, lo: 2.75299830507004e-39 };
        const C25: f64x2 = f64x2 { hi: 6.445350774747155e-26, lo: 3.53578137487626e-42 };
        const C27: f64x2 = f64x2 { hi: -8.983511414822678e-29, lo: -2.7266822373846815e-45 };

        let x = self;
        let x2 = x * x;
        let x4 = x2 * x2;
        let x6 = x2 * x4;
        let x8 = x4 * x4;
        let x16 = x8 * x8;
        let x24 = x8 * x16;

        let r1 = C1 + x2 * C3 + x4 * C5 + x6 * C7;
        let r2 = x8 * (C9 + x2 * C11 + x4 * C13 + x6 * C15);
        let r3 = x16 * (C17 + x2 * C19 + x4 * C21 + x6 * C23);
        let r4 = x24 * (C25 + x2 * C27);

        x * (r1 + r2 + r3 + r4)
    }

    // |x| < pi / 4
    #[inline]
    pub(crate) fn cos_remez(self) -> Self {
        const C0: f64x2 = f64x2 { hi: 1.0, lo: -7.415920157425322e-33 };
        const C2: f64x2 = f64x2 { hi: -0.5, lo: 1.178418360619204e-30 };
        const C4: f64x2 = f64x2 { hi: 0.041666666666666664, lo: 2.312964634604693e-18 };
        const C6: f64x2 = f64x2 { hi: -0.001388888888888889, lo: 5.300543986595874e-20 };
        const C8: f64x2 = f64x2 { hi: 2.48015873015873e-5, lo: 2.151020312414919e-23 };
        const C10: f64x2 = f64x2 { hi: -2.755731922398589e-7, lo: -2.3762056217062672e-23 };
        const C12: f64x2 = f64x2 { hi: 2.08767569878681e-9, lo: -1.3262132406487786e-25 };
        const C14: f64x2 = f64x2 { hi: -1.1470745597729708e-11, lo: 5.843851055946107e-28 };
        const C16: f64x2 = f64x2 { hi: 4.779477332385702e-14, lo: -3.0710780807342914e-30 };
        const C18: f64x2 = f64x2 { hi: -1.561920696740829e-16, lo: 8.75341824575357e-33 };
        const C20: f64x2 = f64x2 { hi: 4.1103175654770674e-19, lo: -6.63263393917438e-36 };
        const C22: f64x2 = f64x2 { hi: -8.89677188795462e-22, lo: -1.2759592625590192e-38 };
        const C24: f64x2 = f64x2 { hi: 1.6113071539190217e-24, lo: -2.9459654925058426e-41 };
        const C26: f64x2 = f64x2 { hi: -2.4235676574866644e-27, lo: 2.2034264640019724e-44 };

        let x = self;
        let x2 = x * x;
        let x4 = x2 * x2;
        let x6 = x2 * x4;
        let x8 = x4 * x4;
        let x16 = x8 * x8;
        let x24 = x8 * x16;

        let r1 = C0 + x2 * C2 + x4 * C4 + x6 * C6;
        let r2 = x8 * (C8 + x2 * C10 + x4 * C12 + x6 * C14);
        let r3 = x16 * (C16 + x2 * C18 + x4 * C20 + x6 * C22);
        let r4 = x24 * (C24 + x2 * C26);

        r1 + r2 + r3 + r4
    }

    // 1 / sqrt(2) < self < sqrt(2)
    #[inline]
    pub(crate) fn ln_remez(self) -> Self {
        assert!(0.707 <= self.hi && self.hi <= 1.415);
        const C1: f64x2 = f64x2 { hi: 2.0, lo: 2.531693403050348e-32 };
        const C3: f64x2 = f64x2 { hi: 0.6666666666666666, lo: 3.700743415403453e-17 };
        const C5: f64x2 = f64x2 { hi: 0.4, lo: -2.220446027080773e-17 };
        const C7: f64x2 = f64x2 { hi: 0.2857142857142857, lo: 1.586016141254861e-17 };
        const C9: f64x2 = f64x2 { hi: 0.2222222222222222, lo: 1.2407739663861083e-17 };
        const C11: f64x2 = f64x2 { hi: 0.1818181818181818, lo: 3.2065997154550064e-18 };
        const C13: f64x2 = f64x2 { hi: 0.1538461538461574, lo: -3.1965060154741107e-18 };
        const C15: f64x2 = f64x2 { hi: 0.13333333333287886, lo: 7.44820907006051e-18 };
        const C17: f64x2 = f64x2 { hi: 0.11764705886515148, lo: -1.17519451979169e-18 };
        const C19: f64x2 = f64x2 { hi: 0.1052631551291071, lo: 4.4806067994093946e-18 };
        const C21: f64x2 = f64x2 { hi: 0.095238228662164, lo: -3.577683177336467e-18 };
        const C23: f64x2 = f64x2 { hi: 0.08695190137972356, lo: -5.409228774321587e-18 };
        const C25: f64x2 = f64x2 { hi: 0.08011166789102804, lo: -2.092932986143882e-18 };
        const C27: f64x2 = f64x2 { hi: 0.07229374987314603, lo: -4.021248728080285e-18 };
        const C29: f64x2 = f64x2 { hi: 0.0855816562700506, lo: 6.675796100148133e-19 };

        let s = self;
        let x = (s - 1.0) / (s + 1.0);
        let x2 = x * x;
        let x4 = x2 * x2;
        let x6 = x2 * x4;
        let x8 = x4 * x4;
        let x10 = x4 * x6;
        let x20 = x10 * x10;

        let r1 = C1 + x2 * C3 + x4 * C5 + x6 * C7 + x8 * C9;
        let r2 = x10 * (C11 + x2 * C13 + x4 * C15 + x6 * C17 + x8 * C19);
        let r3 = x20 * (C21 + x2 * C23 + x4 * C25 + x6 * C27 + x8 * C29);

        x * (r1 + r2 + r3)
    }

    // |x| <= 0.34657359028 = ln(2) / 2
    #[inline]
    pub(crate) fn exp_remez(self) -> Self {
        const C2: f64x2 = f64x2 { hi: 0.16666666666666666, lo: 9.251858538542447e-18 };
        const C4: f64x2 = f64x2 { hi: -0.002777777777777778, lo: 1.0601087929995308e-19 };
        const C6: f64x2 = f64x2 { hi: 6.613756613756614e-5, lo: -4.460173646997389e-21 };
        const C8: f64x2 = f64x2 { hi: -1.6534391534391535e-6, lo: 7.121962972677988e-23 };
        const C10: f64x2 = f64x2 { hi: 4.1753513975736114e-8, lo: 1.158547249215353e-24 };
        const C12: f64x2 = f64x2 { hi: -1.0568380277354652e-9, lo: 5.58404280005523e-26 };
        const C14: f64x2 = f64x2 { hi: 2.6765073029312422e-11, lo: 9.12829168899536e-28 };
        const C16: f64x2 = f64x2 { hi: -6.779357355296518e-13, lo: -1.936460166148485e-29 };
        const C18: f64x2 = f64x2 { hi: 1.71700970829093e-14, lo: -1.033795194722353e-30 };
        const C20: f64x2 = f64x2 { hi: -4.278007864569552e-16, lo: 1.5907971763038017e-32 };

        let x = self;
        let x2 = x * x;
        let x4 = x2 * x2;
        let x6 = x2 * x4;
        let x8 = x4 * x4;
        let x14 = x8 * x6;

        let r1 = x2 * C2 + x4 * C4 + x6 * C6;
        let r2 = x8 * (C8 + x2 * C10 + x4 * C12);
        let r3 = x14 * (C14 + x2 * C16 + x4 * C18 + x6 * C20);
        // r = 2.0 + r1 + r2 + r3;
        // r = x (exp(x) + 1) / (exp(x) - 1) => exp(x) = 1 + 2r / (r - x)
        let c = x - (r1 + r2 + r3);
        1.0 + x + x * c / (2.0 - c)
    }

    pub(crate) fn atan_remez(self) -> Self {
        const C1: f64x2 = f64x2 { hi: 1.0, lo: -6.28445248852659e-31 };
        const C3: f64x2 = f64x2 { hi: -0.3333333333333333, lo: -1.850371707453854e-17 };
        const C5: f64x2 = f64x2 { hi: 0.2, lo: -1.1102233318388352e-17 };
        const C7: f64x2 = f64x2 { hi: -0.14285714285714285, lo: -7.928429626678543e-18 };
        const C9: f64x2 = f64x2 { hi: 0.1111111111111111, lo: 5.610977749577722e-18 };
        const C11: f64x2 = f64x2 { hi: -0.0909090909090908, lo: 4.45334301730286e-18 };
        const C13: f64x2 = f64x2 { hi: 0.0769230769230615, lo: 2.370246042413161e-18 };
        const C15: f64x2 = f64x2 { hi: -0.06666666666519032, lo: -3.3900293469993338e-18 };
        const C17: f64x2 = f64x2 { hi: 0.058823529310302304, lo: 2.4275518212554156e-18 };
        const C19: f64x2 = f64x2 { hi: -0.05263157387756347, lo: 1.5237747127147057e-18 };
        const C21: f64x2 = f64x2 { hi: 0.047618863095637315, lo: -2.8390751379840543e-19 };
        const C23: f64x2 = f64x2 { hi: -0.0434734148857163, lo: -7.686856741213805e-19 };
        const C25: f64x2 = f64x2 { hi: 0.0399103569181399, lo: 2.326566503469594e-18 };
        const C27: f64x2 = f64x2 { hi: -0.035922805494120864, lo: -1.4742055459849575e-18 };
        const C29: f64x2 = f64x2 { hi: 0.025993659875133343, lo: 4.697290175572255e-19 };

        let x = self;
        let x2 = x * x;
        let x4 = x2 * x2;
        let x6 = x2 * x4;
        let x8 = x4 * x4;
        let x10 = x4 * x6;
        let x20 = x10 * x10;

        let r1 = C1 + x2 * C3 + x4 * C5 + x6 * C7 + x8 * C9;
        let r2 = x10 * (C11 + x2 * C13 + x4 * C15 + x6 * C17 + x8 * C19);
        let r3 = x20 * (C21 + x2 * C23 + x4 * C25 + x6 * C27 + x8 * C29);

        x * (r1 + r2 + r3)
    }
}
